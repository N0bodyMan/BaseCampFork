// SPDX-License-Identifier: MIT
pragma solidity ^0.8.8;

import "./AddressBook.sol";

contract AddressBookFactory {
    // Список всех развернутых AddressBook
    AddressBook[] private addressBooks;

    // Событие при успешном деплое
    event AddressBookDeployed(address indexed owner, address addressBook);

    // Функция деплоя нового AddressBook
    function deploy() external returns (AddressBook) {
        // Создаем новый контракт
        AddressBook newAddressBook = new AddressBook();

        // Передаем владение пользователю, вызвавшему deploy()
        newAddressBook.transferOwnership(msg.sender);

        // Сохраняем контракт в массив
        addressBooks.push(newAddressBook);

        // Логируем событие
        emit AddressBookDeployed(msg.sender, address(newAddressBook));

        return newAddressBook;
    }

    // Получить все развернутые AddressBook
    function getAllAddressBooks() external view returns (AddressBook[] memory) {
        return addressBooks;
    }

    // Получить количество развернутых AddressBook
    function count() external view returns (uint256) {
        return addressBooks.length;
    }
}

